{"version":3,"sources":["redux/actions.tsx","redux/mode.tsx","redux/reducers.tsx","redux/region.tsx","svg.tsx","chart-control.tsx","TwitterButton.tsx","vx.tsx","AddCountry.tsx","x-axis.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["EReduxActionTypes","toggleScale","type","TOGGLE_SCALE","changeZoom","by","CHANGE_ZOOM","data","changeMode","to","CHANGE_MODE","addRegion","name","ADD_REGION","removeRegion","index","REMOVE_REGION","shiftRegion","SHIFT_REGION","EMode","ModeToAllCountryData","TotalCases","TotalCasesPP","DailyCases","DailyCasesPP","TotalDeaths","TotalDeathsPP","DailyDeaths","DailyDeathsPP","all","toString","mode","EScale","fromString","str","parts","split","length","country","offset","_offset","parseInt","defaultState","change","scale","Linear","zoom","regions","state","persistedState","Log","setRegions","push","splice","query","s","z","m","r","map","region","window","history","replaceState","qs","stringify","loadState","parse","location","search","Object","values","includes","Array","isArray","ChevronLeft","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","React","PureComponent","ChevronRight","ChevronsLeft","ChevronsRight","PlusSign","x1","y1","x2","y2","MinusSign","TrashSign","d","ChartControl","props","bind","zoomIn","zoomOut","key","this","Dropdown","id","onSelect","Toggle","variant","Menu","Item","eventKey","className","aria-label","disabled","onClick","e","target","HTMLElement","dataset","data-key","renderModePicker","renderScaleToggle","connect","dispatch","bindActionCreators","TwitterButton","useState","href","setUrl","useEffect","style","display","data-show-count","logTicks","Set","y","value","VX","withTooltip","margin","top","right","bottom","left","showTooltip","hideTooltip","tooltipData","tooltipTop","tooltipLeft","width","height","dims","setDims","xMax","yMax","vxData","allCountryData","calcCases","cases","endsWith","population","Population","isNaN","forEach","idx","n","countryData","filter","countryRow","dayToCases","_","fromPairs","year","from","keys","date","point","color","tooltipShifter","sort","a","b","middle","Math","floor","i","handleTooltip","event","xValue","localPoint","x","round","xScale","invert","currentData","matchingPoint","find","yScale","scaleLinear","range","domain","DAYS_TO_SHOW","maxY","max","nice","scaleLog","common","curve","curveMonotoneX","axisFormat","valueOf","has","format","bounds","onResize","measureRef","ref","AxisLeft","hideZero","numTicks","tickFormat","tickStroke","tickLabelProps","textAnchor","fontSize","dx","dy","tickComponent","formattedValue","tickProps","Grid","opacity","numTicksRows","numTicksColumns","LinePath","Bar","onTouchStart","onTouchMove","onMouseEnter","onMouseMove","onMouseLeave","Line","pointerEvents","strokeDasharray","backgroundColor","boxShadow","Tooltip","dayjs","add","Number","isInteger","toFixed","searchIndex","algoliasearch","initIndex","AddRegion","onSuccess","q","setQ","suggestions","setSuggestions","getSuggestions","hits","console","log","_suggestions","hit","slice","justifyContent","onChange","maxWidth","autoFocus","placeholder","suggestion","extend","dayOfYear","XAxis","enteringRegion","shiftRegionBack1","shiftRegionBack5","shiftRegionForward1","shiftRegionForward5","showNewRegionInput","dismissNewRegionInput","setState","day","modulo","zero","transform","dayString","delta","cls","abs","buttonAttrs","renderOffset","renderDays","renderRegion","renderAddRegion","Boolean","hostname","match","ReactDOM","render","store","createStore","action","actions","SET_REGIONS","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5980b939.chunk.js","sourcesContent":["import { IRegion } from \"./region\";\n\nexport enum EReduxActionTypes {\n  TOGGLE_SCALE = \"toggle_scale\",\n  CHANGE_ZOOM = \"change_zoom\",\n  CHANGE_MODE = \"change_mode\",\n  SET_REGIONS = \"set_regions\",\n  ADD_REGION = \"add_region\",\n  REMOVE_REGION = \"remove_region\",\n  SHIFT_REGION = \"shift_region\"\n}\n\nexport interface IReduxBaseAction {\n  type: EReduxActionTypes;\n}\n\nexport interface IReduxToggleScaleAction extends IReduxBaseAction {\n  type: EReduxActionTypes.TOGGLE_SCALE;\n}\n\nexport function toggleScale(): IReduxToggleScaleAction {\n  return { type: EReduxActionTypes.TOGGLE_SCALE };\n}\n\nexport interface IReduxChangeZoomAction extends IReduxBaseAction {\n  type: EReduxActionTypes.CHANGE_ZOOM;\n  data: number;\n}\n\nexport function changeZoom(by: number): IReduxChangeZoomAction {\n  return { type: EReduxActionTypes.CHANGE_ZOOM, data: by };\n}\n\nexport interface IReduxChangeModeAction extends IReduxBaseAction {\n  type: EReduxActionTypes.CHANGE_MODE;\n  data: string;\n}\n\nexport function changeMode(to: string): IReduxChangeModeAction {\n  return { type: EReduxActionTypes.CHANGE_MODE, data: to };\n}\n\nexport interface IReduxSetRegionsAction extends IReduxBaseAction {\n  type: EReduxActionTypes.SET_REGIONS;\n  data: IRegion[];\n}\n\nexport function setRegions(regions: IRegion[]): IReduxSetRegionsAction {\n  return { type: EReduxActionTypes.SET_REGIONS, data: regions };\n}\n\nexport interface IReduxAddRegionAction extends IReduxBaseAction {\n  type: EReduxActionTypes.ADD_REGION;\n  data: string;\n}\n\nexport function addRegion(name: string): IReduxAddRegionAction {\n  return { type: EReduxActionTypes.ADD_REGION, data: name };\n}\n\nexport interface IReduxRemoveRegionAction extends IReduxBaseAction {\n  type: EReduxActionTypes.REMOVE_REGION;\n  data: number;\n}\n\nexport function removeRegion(index: number): IReduxRemoveRegionAction {\n  return { type: EReduxActionTypes.REMOVE_REGION, data: index };\n}\n\nexport interface IReduxShiftRegionAction extends IReduxBaseAction {\n  type: EReduxActionTypes.SHIFT_REGION;\n  data: { index: number, by: number };\n}\n\nexport function shiftRegion(index: number, by: number): IReduxShiftRegionAction {\n  return { type: EReduxActionTypes.SHIFT_REGION, data: { index, by } };\n}\n\nexport type ReduxAction =\n  | IReduxToggleScaleAction\n  | IReduxChangeModeAction\n  | IReduxChangeZoomAction\n  | IReduxSetRegionsAction\n  | IReduxAddRegionAction\n  | IReduxRemoveRegionAction\n  | IReduxShiftRegionAction;\n","import TotalDeaths from \"../data/total-deaths.json\";\nimport DailyDeaths from \"../data/daily-deaths.json\";\nimport TotalCases from \"../data/total-cases.json\";\nimport DailyCases from \"../data/daily-cases.json\";\n\nexport enum EMode {\n  TotalCases = \"tc\",\n  TotalCasesPP = \"tcpp\",\n  DailyCases = \"dc\",\n  DailyCasesPP = \"dcpp\",\n  TotalDeaths = \"td\",\n  TotalDeathsPP = \"tdpp\",\n  DailyDeaths = \"dd\",\n  DailyDeathsPP = \"ddpp\"\n}\n\ntype DataRow = { country: string; code: string; year: number; cases: number };\nexport const ModeToAllCountryData: Record<EMode, DataRow[]> = {\n  [EMode.TotalCases]: TotalCases,\n  [EMode.TotalCasesPP]: TotalCases,\n  [EMode.DailyCases]: DailyCases,\n  [EMode.DailyCasesPP]: DailyCases,\n  [EMode.TotalDeaths]: TotalDeaths,\n  [EMode.TotalDeathsPP]: TotalDeaths,\n  [EMode.DailyDeaths]: DailyDeaths,\n  [EMode.DailyDeathsPP]: DailyDeaths\n};\n\nexport const all: EMode[] = [\n  EMode.TotalCases,\n  EMode.TotalCasesPP,\n  EMode.DailyCases,\n  EMode.DailyCasesPP,\n  EMode.TotalDeaths,\n  EMode.TotalDeathsPP,\n  EMode.DailyDeaths,\n  EMode.DailyDeathsPP\n];\n\nexport function toString(mode: EMode): string {\n  switch (mode) {\n    case EMode.TotalCases:\n      return \"Total Cases\";\n    case EMode.TotalCasesPP:\n      return \"Total Cases per 1mm Pop.\"\n    case EMode.DailyCases:\n      return \"Daily Cases\";\n    case EMode.DailyCasesPP:\n      return \"Daily Cases per 1mm Pop.\"\n    case EMode.TotalDeaths:\n      return \"Total Deaths\";\n    case EMode.TotalDeathsPP:\n      return \"Total Deaths per 1mm Pop.\"\n    case EMode.DailyDeaths:\n      return \"Daily Deaths\";\n    case EMode.DailyDeathsPP:\n      return \"Daily Deaths per 1mm Pop.\"\n  }\n}\n","import qs from \"query-string\";\n\nimport * as actions from \"./actions\";\nimport { ReduxAction } from \"./actions\";\nimport * as mode from \"./mode\";\nimport * as region from \"./region\";\nimport { IRegion } from \"./region\";\n\nexport enum EScale {\n  Linear = \"linear\",\n  Log = \"log\"\n}\n\nexport interface AppState {\n  change: boolean;\n  scale: EScale;\n  zoom: number;\n  mode: mode.EMode;\n  regions: region.IRegion[];\n}\n\nconst defaultState: AppState = {\n  change: false,\n  scale: EScale.Linear,\n  zoom: 3,\n  mode: mode.EMode.TotalCases,\n  regions: [\n    { country: \"United States\", offset: -49 },\n    { country: \"Italy\", offset: -39 },\n    { country: \"South Korea\", offset: -35 }\n  ]\n};\n\nexport default function(state: AppState = loadState(), action: ReduxAction) {\n  switch (action.type) {\n    case actions.EReduxActionTypes.TOGGLE_SCALE:\n      return toggleScale(state);\n    case actions.EReduxActionTypes.CHANGE_ZOOM:\n      return changeZoom(state, action.data);\n    case actions.EReduxActionTypes.CHANGE_MODE:\n      return changeMode(state, action.data);\n    case actions.EReduxActionTypes.SET_REGIONS:\n      return setRegions(state, action.data);\n    case actions.EReduxActionTypes.ADD_REGION:\n      return addRegion(state, action.data);\n    case actions.EReduxActionTypes.REMOVE_REGION:\n      return removeRegion(state, action.data);\n    case actions.EReduxActionTypes.SHIFT_REGION:\n      return shiftRegion(state, action.data.index, action.data.by);\n    default:\n      return state;\n  }\n}\n\nfunction toggleScale(state: AppState): AppState {\n  return persistedState({\n    ...state,\n    scale: state.scale === EScale.Linear ? EScale.Log : EScale.Linear\n  });\n}\n\nfunction changeZoom(state: AppState, data: number): AppState {\n  let zoom = state.zoom + data;\n  if (zoom > 5) {\n    zoom = 5;\n  } else if (zoom < 1) {\n    zoom = 1;\n  }\n  return persistedState({ ...state, zoom });\n}\n\nfunction changeMode(state: AppState, to: string): AppState {\n  return persistedState({ ...state, mode: to as mode.EMode });\n}\n\nfunction setRegions(state: AppState, regions: IRegion[]): AppState {\n  return persistedState({ ...state, regions });\n}\n\nfunction addRegion(state: AppState, name: string): AppState {\n  let regions = [...state.regions];\n  regions.push({ country: name, offset: -47 });\n  return persistedState({ ...state, regions });\n}\n\nfunction removeRegion(state: AppState, index: number): AppState {\n  let regions = [...state.regions];\n  regions.splice(index, 1);\n  return persistedState({ ...state, regions });\n}\n\nfunction shiftRegion(state: AppState, index: number, by: number): AppState {\n  let regions = [...state.regions];\n  regions[index] = { ...regions[index], offset: regions[index].offset + by };\n  return persistedState({ ...state, regions });\n}\n\nfunction persistedState(state: AppState): AppState {\n  let query = {\n    s: state.scale,\n    z: state.zoom,\n    m: state.mode,\n    r: state.regions.map(r => region.toString(r))\n  };\n  window.history.replaceState(null, \"\", \"?\" + qs.stringify(query));\n  state.change = true;\n  return state;\n}\n\nfunction loadState(): AppState {\n  const query = qs.parse(window.location.search);\n  let state = { ...defaultState };\n\n  if (Object.values(EScale).includes(query.s as EScale)) {\n    state.scale = query.s as EScale;\n  }\n  if (Object.values(mode.EMode).includes(query.m as mode.EMode)) {\n    state.mode = query.m as mode.EMode;\n  }\n  if (Array.isArray(query.r)) {\n    state.regions = query.r.map(r => region.fromString(r));\n  } else if (query.r) {\n    state.regions = [region.fromString(query.r)];\n  }\n\n  return state;\n}\n","export interface IRegion {\n  country: string;\n  offset: number;\n}\n\nexport function toString(region: IRegion): string {\n  return `${region.country},${region.offset}`;\n}\n\nexport function fromString(str: string): IRegion {\n  let region = { country: \"United States\", offset: 0 };\n\n  const parts = str.split(\",\");\n  if (parts.length === 0) {\n    return region;\n  }\n\n  const [country, _offset] = parts;\n  return {\n    country,\n    offset: parseInt(_offset) || 0\n  };\n}\n","import React from \"react\";\n\nexport class ChevronLeft extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"15 18 9 12 15 6\"/>\n      </svg>\n    );\n  }\n}\n\nexport class ChevronRight extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"9 18 15 12 9 6\"/>\n      </svg>\n    );\n  }\n}\n\nexport class ChevronsLeft extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"11 17 6 12 11 7\"/>\n        <polyline points=\"18 17 13 12 18 7\"/>\n      </svg>\n    );\n  }\n}\n\nexport class ChevronsRight extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"13 17 18 12 13 7\"/>\n        <polyline points=\"6 17 11 12 6 7\"/>\n      </svg>\n    );\n  }\n}\n\nexport class PlusSign extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\n        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n      </svg>\n    );\n  }\n}\n\nexport class MinusSign extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n      </svg>\n    );\n  }\n}\n\nexport class TrashSign extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"\n        strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <polyline points=\"3 6 5 6 21 6\"/>\n        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n        <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n        <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n      </svg>\n    );\n  }\n}\n","import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\n\nimport { changeMode, changeZoom, toggleScale } from \"./redux/actions\";\nimport * as mode from \"./redux/mode\";\nimport { AppState, EScale } from \"./redux/reducers\";\nimport { PlusSign, MinusSign } from \"./svg\";\n\nimport \"./chart-control.css\";\n\ntype TChartControlProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nclass ChartControl extends React.PureComponent<TChartControlProps, {}> {\n  constructor(props: TChartControlProps) {\n    super(props);\n\n    this.changeMode = this.changeMode.bind(this);\n    this.zoomIn = this.zoomIn.bind(this);\n    this.zoomOut = this.zoomOut.bind(this);\n    this.toggleScale = this.toggleScale.bind(this);\n  }\n\n  changeMode(key: string) {\n    this.props.changeMode(key);\n  }\n\n  renderModePicker(): JSX.Element {\n    return (\n      <Dropdown id=\"mode-control\" onSelect={this.changeMode}>\n        <Dropdown.Toggle variant=\"light\" id=\"mode-dropdown\">\n          {mode.toString(this.props.mode)}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {mode.all.map(m => (\n            <Dropdown.Item key={m} eventKey={m}>\n              {mode.toString(m)}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n\n  zoomOut() {\n    this.props.changeZoom(-1);\n  }\n\n  zoomIn() {\n    this.props.changeZoom(1);\n  }\n\n  renderZoomControl(): JSX.Element {\n    return (\n      <div id=\"zoom-control\" className=\"btn-group\" aria-label=\"Zoom\">\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-light\"\n          disabled={this.props.zoom === 1}\n          onClick={this.zoomOut}\n        >\n          <MinusSign />\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-light\"\n          disabled={this.props.zoom === 5}\n          onClick={this.zoomIn}\n        >\n          <PlusSign />\n        </button>\n      </div>\n    );\n  }\n\n  toggleScale(e: React.MouseEvent<HTMLElement>) {\n    if (e.target instanceof HTMLElement) {\n      if (e.target.dataset[\"key\"] !== this.props.scale) {\n        this.props.toggleScale();\n      }\n    }\n  }\n\n  renderScaleToggle(): JSX.Element {\n    const baseClass = \"btn btn-link btn-sm\";\n    return (\n      <div id=\"scale-toggle\" className=\"btn-group\" aria-label=\"Scale\">\n        {[EScale.Linear, EScale.Log].map(s => (\n          <button\n            key={s}\n            data-key={s}\n            type=\"button\"\n            className={baseClass + (this.props.scale === s ? \" selected\" : \"\")}\n            onClick={this.toggleScale}\n          >\n            {s}\n          </button>\n        ))}\n      </div>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <div id=\"chart-control\" className=\"baseline-flex\">\n        {this.renderModePicker()}\n        <div className=\"baseline-flex\">\n          {this.renderScaleToggle()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  zoom: state.zoom,\n  mode: state.mode,\n  scale: state.scale\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators({ changeMode, changeZoom, toggleScale }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartControl);\n","import React, { useEffect, useState } from \"react\";\n\nexport const TwitterButton = () => {\n  const [url, setUrl] = useState(window[\"location\"].href);\n\n  useEffect(() => {\n    setUrl(window[\"location\"].href);\n  }, [window[\"location\"].href]);\n\n  return (\n    <div>\n      <a\n        style={{ display: \"none\" }}\n        href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\n        className=\" twitter-share-button\"\n        data-show-count=\"false\"\n      >\n        Tweet\n      </a>\n    </div>\n  );\n};\n","import dayjs from \"dayjs\";\nimport { max } from \"d3-array\";\nimport React from \"react\";\nimport Measure, { BoundingRect } from \"react-measure\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { format } from \"d3-format\";\n\nimport { AxisLeft } from \"@vx/axis\";\nimport { Grid } from \"@vx/grid\";\nimport { Bar, Line, LinePath } from \"@vx/shape\";\nimport { curveMonotoneX } from \"@vx/curve\";\nimport { scaleLinear, scaleLog } from \"@vx/scale\";\nimport { Tooltip, withTooltip } from \"@vx/tooltip\";\nimport { WithTooltipProvidedProps } from \"@vx/tooltip/lib/enhancers/withTooltip\";\nimport { localPoint } from \"@vx/event\";\n\nimport { EMode, ModeToAllCountryData } from \"./redux/mode\";\nimport { AppState, EScale } from \"./redux/reducers\";\nimport Population from \"./data/country-pop.json\";\n\nimport \"./vx.css\";\n\nconst range = (n: number): number[] => Array.from(Array(n).keys());\nconst logTicks = new Set([1, 10, 100, 1000, 10000, 100000]);\n\ninterface IVXDataPoint {\n  date: number;\n  value: number;\n}\n\ninterface IVXDataSeries {\n  name: string;\n  color: string;\n  offset: number;\n  points: IVXDataPoint[];\n}\n\nconst x = (d: IVXDataPoint) => d.date;\nconst y = (d: IVXDataPoint) => d.value;\n\ninterface IVXProps {}\n\nexport interface IVXMarginShape {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\ninterface IVXProvidedProps {\n  margin?: IVXMarginShape;\n  events?: boolean;\n}\n\ninterface IVXTooltipData {\n  name: string;\n  color: string;\n  offset: number;\n  date: number;\n  value: number;\n  y: number;\n}\n\ntype TVXProps = IVXProps &\n  IVXProvidedProps &\n  ReturnType<typeof mapStateToProps>;\n\nconst DAYS_TO_SHOW = 17;\n\nconst VX = withTooltip<TVXProps, IVXTooltipData[]>(\n  ({\n    margin = { top: 0, right: 0, bottom: 0, left: 0 },\n    showTooltip,\n    hideTooltip,\n    tooltipData,\n    tooltipTop = 0,\n    tooltipLeft = 0,\n    mode,\n    scale,\n    regions\n  }: TVXProps & WithTooltipProvidedProps<IVXTooltipData[]>) => {\n    const [dims, setDims] = React.useState<BoundingRect>({\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: 100,\n      height: 100\n    });\n\n    const xMax = dims.width - margin.left - margin.right;\n    const yMax = dims.height - margin.top - margin.bottom;\n\n    const vxData: IVXDataSeries[] = [];\n    const allCountryData = ModeToAllCountryData[mode];\n\n    const calcCases = (cases: number, mode: EMode, country: string): number => {\n      if (mode.endsWith(\"pp\")) {\n        const population = Population[country];\n        if (isNaN(population)) {\n          return 0;\n        }\n        return (cases / population * 1000000);\n      }\n      return cases;\n    }\n\n    regions.forEach(({ country, offset }, idx) => {\n      const countryData = allCountryData.filter(\n        countryRow => countryRow.country === country\n      );\n\n      const dayToCases = _.fromPairs(\n        _.map(countryData, ({ cases, year }) => [\n          year, calcCases(cases, mode, country)\n        ])\n      );\n\n      const points = range(DAYS_TO_SHOW)\n        .map(idx => ({\n          date: idx,\n          value: dayToCases[idx - offset] || 0\n        }))\n        .filter(point => point.value !== null && point.value !== 0);\n\n      vxData.push({\n        name: country,\n        color: `var(--series-color-${vxData.length % 6})`,\n        offset,\n        points\n      });\n    });\n\n    const tooltipShifter = (data: IVXTooltipData[]): IVXTooltipData[] => {\n      if (data.length < 2) {\n        return data;\n      }\n\n      data = data.sort((a, b) => (a.y > b.y) ? 1 : -1);\n      const middle = Math.floor(data.length / 2);\n\n      if (data[middle].y - data[middle - 1].y < 50) {\n        data[middle].y = data[middle].y + 25;\n        data[middle - 1].y = data[middle - 1].y - 25;\n      }\n\n      for (let i = middle - 2; i >= 0; i--) {\n        if (data[i + 1].y - data[i].y < 50) {\n          data[i].y = data[i + 1].y - 50;\n        }\n      }\n\n      for (let i = middle + 1; i < data.length; i++) {\n        if (data[i].y - data[i - 1].y < 50) {\n          data[i].y = data[i - 1].y + 50;\n        }\n      }\n\n      return data;\n    }\n\n    const handleTooltip = (\n      event: React.TouchEvent<SVGRectElement> | React.MouseEvent<SVGRectElement>\n    ) => {\n      const xValue = localPoint(event)?.x || 0;\n      const index = Math.round(xScale.invert(xValue));\n\n      let tooltipData: IVXTooltipData[] = [];\n      for (let i = 0; i < vxData.length; i++) {\n        const currentData = vxData[i];\n        const { name, color, offset } = currentData;\n        const date = index;\n\n        const matchingPoint = currentData.points.find(\n          point => point.date === date\n        );\n        if (!matchingPoint) {\n          continue;\n        }\n\n        const value = matchingPoint.value;\n\n        tooltipData.push({\n          name,\n          color,\n          offset,\n          date: index,\n          value,\n          y: yScale(value)\n        });\n      }\n\n      showTooltip({\n        tooltipData: tooltipShifter(tooltipData),\n        tooltipLeft: xScale(index),\n        tooltipTop: 0\n      });\n    };\n\n    const xScale = scaleLinear({\n      range: [0, dims.width],\n      domain: [0, DAYS_TO_SHOW - 1]\n    });\n\n    let maxY = 0;\n    for (let i = 0; i < vxData.length; i++) {\n      maxY = Math.max(max(vxData[i].points, y) || 0, maxY);\n    }\n    let yScale = scaleLinear({\n      range: [dims.height, 0],\n      domain: [0, maxY],\n      nice: true\n    });\n    if (scale === EScale.Log) {\n      yScale = scaleLog({\n        range: [dims.height, 0],\n        domain: [1, maxY],\n        nice: true\n      });\n    }\n\n    const common = {\n      x: (d: IVXDataPoint) => xScale(x(d)),\n      y: (d: IVXDataPoint) => yScale(y(d)),\n      curve: curveMonotoneX\n    };\n\n    const logFormat = (n: number | { valueOf(): number; }, i: number) => {\n      let value = typeof n === \"number\" ? n : n.valueOf();\n      return logTicks.has(value) ? format(\".2s\")(n) : \"\";\n    };\n    const axisFormat = scale === EScale.Log ? logFormat : format(\".2s\");\n\n    const tooltipValue = (value: number): string => {\n      if (Number.isInteger(value)) {\n        return value.toFixed();\n      }\n      return value.toFixed(2);\n    }\n\n    return (\n      <Measure\n        bounds\n        onResize={r => {\n          r.bounds && setDims(r.bounds);\n        }}\n      >\n        {({ measureRef }) => (\n          <div ref={measureRef}>\n            <svg width={dims.width} height={300}>\n              <AxisLeft\n                top={margin.top}\n                left={0}\n                scale={yScale}\n                hideZero\n                numTicks={5}\n                tickFormat={axisFormat}\n                tickStroke=\"transparent\"\n                stroke=\"transparent\"\n                tickLabelProps={() => ({\n                  fill: \"var(--gray)\",\n                  textAnchor: \"end\",\n                  fontSize: 10,\n                  dx: \"0em\",\n                  dy: \"0.25em\"\n                })}\n                tickComponent={({ formattedValue, ...tickProps }) => (\n                  <text {...tickProps}>{formattedValue}</text>\n                )}\n              />\n              <Grid\n                top={margin.top}\n                left={margin.left}\n                xScale={xScale}\n                yScale={yScale}\n                stroke=\"var(--gray)\"\n                opacity={0.1}\n                width={xMax}\n                height={yMax}\n                numTicksRows={5}\n                numTicksColumns={10}\n              />\n              {vxData.map(d => (\n                <LinePath\n                  key={d.name}\n                  stroke={d.color}\n                  strokeWidth={3}\n                  {...common}\n                  data={d.points}\n                />\n              ))}\n              <Bar\n                x={0}\n                y={0}\n                width={dims.width}\n                height={300}\n                fill=\"transparent\"\n                onTouchStart={handleTooltip}\n                onTouchMove={handleTooltip}\n                onMouseEnter={handleTooltip}\n                onMouseMove={handleTooltip}\n                onMouseLeave={hideTooltip}\n              />\n              {tooltipData && (\n                <g>\n                  <Line\n                    from={{ x: tooltipLeft, y: 0 }}\n                    to={{ x: tooltipLeft, y: 10000 }}\n                    stroke=\"var(--gray)\"\n                    strokeWidth={1}\n                    style={{ pointerEvents: \"none\" }}\n                    strokeDasharray=\"2,2\"\n                  />\n                </g>\n              )}\n            </svg>\n            {tooltipData && (\n              <div>\n                {tooltipData.map(d => {\n                  let style = {\n                    color: d.color,\n                    backgroundColor: \"transparent\",\n                    boxShadow: \"none\"\n                  };\n                  if (d.date > 10) {\n                    style[\"transform\"] = \"translateX(-100%)\";\n                    style[\"textAlign\"] = \"right\";\n                  }\n                  return (\n                    <Tooltip\n                      key={d.name}\n                      top={d.y - 30}\n                      left={tooltipLeft}\n                      style={style}\n                    >\n                      <div className=\"tooltip-desc\">\n                        <b>{`${d.name}`}</b>\n                        <span>{`- ${dayjs(\"2020-01-21\")\n                          .add(d.date - d.offset, \"day\")\n                          .format(\"MMM D\")}`}</span>\n                      </div>\n                      <div className=\"tooltip-value\">\n                        {`${tooltipValue(d.value)}`}\n                      </div>\n                    </Tooltip>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </Measure>\n    );\n  }\n);\n\nconst mapStateToProps = (state: AppState) => ({\n  regions: state.regions,\n  zoom: state.zoom,\n  scale: state.scale,\n  mode: state.mode\n});\n\nexport default connect(mapStateToProps)(VX);\n","import algoliasearch from \"algoliasearch/lite\";\nimport * as svg from \"./svg\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { addRegion } from \"./redux/actions\";\nimport \"./AddCountry.css\";\n\nconst searchClient = algoliasearch(\n  \"ZOOMT5L4JY\",\n  \"43a938b4fe4feea7874320d044a19bc5\"\n);\nconst searchIndex = searchClient.initIndex(\"covid\");\n\nexport const _AddRegion = ({\n  onSuccess,\n  addRegion\n}: {\n  onSuccess: () => void;\n  addRegion: (region: string) => void;\n}) => {\n  const [q, setQ] = useState(\"\");\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n\n  const getSuggestions = async (q: string) => {\n    const { hits } = await searchIndex.search(q);\n    console.log(hits);\n    // @ts-ignore\n    const _suggestions = hits.map(hit => hit.name).slice(0, 5);\n\n    setSuggestions(_suggestions);\n  };\n\n  useEffect(() => {\n    getSuggestions(q);\n  }, [q]);\n\n  return (\n    <div id=\"region-input-row\" className=\"region-row text-center\">\n      <div\n        className=\"region-name-wrapper\"\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <input\n          value={q}\n          onChange={e => setQ(e.target.value)}\n          className=\"form-control\"\n          style={{ maxWidth: 200 }}\n          type=\"text\"\n          autoFocus={true}\n          placeholder=\"Country or region\"\n        />\n\n        <button\n          className=\"btn btn-link\"\n          onClick={() => onSuccess()}\n          style={{ color: \"gray\" }}\n        >\n          <svg.TrashSign />\n        </button>\n      </div>\n      <div className=\"autocomplete\">\n        {suggestions.map(suggestion => (\n          <div\n            key={suggestion}\n            className={\"btn btn-link\"}\n            onClick={() => {\n              addRegion(suggestion);\n              onSuccess();\n            }}\n          >\n            {suggestion}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators({ addRegion }, dispatch);\n\nexport const AddRegion = connect(null, mapDispatchToProps)(_AddRegion);\n","import dayjs from \"dayjs\";\nimport dayOfYear from \"dayjs/plugin/dayOfYear\";\nimport React from \"react\";\nimport Measure, { BoundingRect } from \"react-measure\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\n\nimport { addRegion, removeRegion, shiftRegion } from \"./redux/actions\";\nimport { AppState } from \"./redux/reducers\";\nimport * as region from \"./redux/region\";\nimport { AddRegion } from \"./AddCountry\";\nimport * as svg from \"./svg\";\n\nimport \"./x-axis.css\";\n\ndayjs.extend(dayOfYear);\n\ntype TXAxisProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\ninterface IXAxisState {\n  enteringRegion: boolean;\n  dims: BoundingRect;\n}\n\nclass XAxis extends React.PureComponent<TXAxisProps, IXAxisState> {\n  constructor(props: TXAxisProps) {\n    super(props);\n\n    this.state = {\n      enteringRegion: false,\n      dims: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 1000,\n        height: 1000\n      }\n    };\n    this.addRegion = this.addRegion.bind(this);\n    this.removeRegion = this.removeRegion.bind(this);\n    this.shiftRegionBack1 = this.shiftRegionBack1.bind(this);\n    this.shiftRegionBack5 = this.shiftRegionBack5.bind(this);\n    this.shiftRegionForward1 = this.shiftRegionForward1.bind(this);\n    this.shiftRegionForward5 = this.shiftRegionForward5.bind(this);\n    this.showNewRegionInput = this.showNewRegionInput.bind(this);\n    this.dismissNewRegionInput = this.dismissNewRegionInput.bind(this);\n  }\n\n  addRegion(e: React.KeyboardEvent<HTMLElement>) {\n    console.log(e);\n  }\n\n  removeRegion(e: React.MouseEvent<HTMLElement>) {\n    if (e.target instanceof HTMLElement) {\n      this.props.removeRegion(parseInt(e.target.dataset[\"index\"]!));\n    }\n  }\n\n  shiftRegionBack1(e: React.MouseEvent<HTMLElement>) {\n    if (e.target instanceof HTMLElement) {\n      this.props.shiftRegion(parseInt(e.target.dataset[\"index\"]!), -1);\n    }\n  }\n\n  shiftRegionBack5(e: React.MouseEvent<HTMLElement>) {\n    if (e.target instanceof HTMLElement) {\n      this.props.shiftRegion(parseInt(e.target.dataset[\"index\"]!), -5);\n    }\n  }\n\n  shiftRegionForward1(e: React.MouseEvent<HTMLElement>) {\n    if (e.target instanceof HTMLElement) {\n      this.props.shiftRegion(parseInt(e.target.dataset[\"index\"]!), 1);\n    }\n  }\n\n  shiftRegionForward5(e: React.MouseEvent<HTMLElement>) {\n    if (e.target instanceof HTMLElement) {\n      this.props.shiftRegion(parseInt(e.target.dataset[\"index\"]!), 5);\n    }\n  }\n\n  showNewRegionInput() {\n    this.setState({ enteringRegion: true });\n  }\n\n  dismissNewRegionInput() {\n    this.setState({ enteringRegion: false });\n  }\n\n  dayString(day: dayjs.Dayjs): string {\n    let modulo = 2;\n    if (this.state.dims.width < 500) {\n      modulo = 4;\n    } else if (this.state.dims.width < 700) {\n      modulo = 3;\n    }\n    const date = day.dayOfYear();\n    return date % modulo === 0 ? day.format(\"M/D\") : \"·\";\n  }\n\n  renderDays(offset: number, i: number): JSX.Element {\n    const zero = dayjs(\"2020-01-21\");\n    return (\n      <div className=\"region-days-wrapper\">\n        <div className=\"region-days-gradient\" />\n        <div\n          className=\"region-days baseline-flex\"\n          style={{\n            transform: `translateX(${(offset * 100) / 16}%`,\n            color: `var(--series-color-${i % 6})`\n          }}\n        >\n          {[...Array(80).keys()].map(d => (\n            <div key={d} className=\"region-day\">\n              <div className=\"region-day-inner\">\n                {this.dayString(zero.add(d, \"day\"))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  renderOffset(offset: number): JSX.Element {\n    if (this.props.regions.length === 0) {\n      return <div />;\n    }\n\n    const base = this.props.regions[0].offset;\n    const delta = offset - base;\n    if (delta === 0) {\n      return <div />;\n    }\n\n    const cls = delta > 0 ? \"delta-ahead\" : \"delta-behind\";\n    return (\n      <div className={cls + \" delta\"}>\n        {`${Math.abs(delta)}d ${delta > 0 ? \"ahead\" : \"behind\"}`}\n      </div>\n    );\n  }\n\n  renderRegion(r: region.IRegion, i: number): JSX.Element {\n    const buttonAttrs = { className: \"btn btn-link\", \"data-index\": i };\n    return (\n      <div className=\"region-row\" key={r.country}>\n        <div className=\"region-shifter region-shifter-left\">\n          <button {...buttonAttrs} onClick={this.shiftRegionBack5}>\n            <svg.ChevronsLeft />\n          </button>\n          <button {...buttonAttrs} onClick={this.shiftRegionBack1}>\n            <svg.ChevronLeft />\n          </button>\n        </div>\n        <div className=\"region-name-wrapper\">\n          <div className=\"region-name-wrapper-inner\">\n            <div\n              className=\"region-icon\"\n              style={{\n                backgroundColor: `var(--series-color-${i % 6})`\n              }}\n            />\n            <div className=\"region-name\">{r.country}</div>\n            <button {...buttonAttrs} onClick={this.removeRegion}>\n              <svg.TrashSign />\n            </button>\n          </div>\n          {this.renderOffset(r.offset)}\n        </div>\n\n        {this.renderDays(r.offset, i)}\n\n        <div className=\"region-shifter region-shifter-right\">\n          <button {...buttonAttrs} onClick={this.shiftRegionForward1}>\n            <svg.ChevronRight />\n          </button>\n          <button {...buttonAttrs} onClick={this.shiftRegionForward5}>\n            <svg.ChevronsRight />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  renderAddRegion(): JSX.Element {\n    return (\n      <div\n        id=\"add-region\"\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        <button className=\"btn btn-primary\" onClick={this.showNewRegionInput}>\n          <svg.PlusSign />\n          <span>Add Country / Region</span>\n        </button>\n      </div>\n    );\n  }\n\n  render(): JSX.Element {\n    return (\n      <Measure\n        bounds\n        onResize={r => {\n          r.bounds && this.setState({ dims: r.bounds });\n        }}\n      >\n        {({ measureRef }) => (\n          <div id=\"x-axis\" ref={measureRef}>\n            <hr />\n            {this.props.regions.map((r, i) => this.renderRegion(r, i))}\n\n            <p className=\"use-guide\">\n              Tip: Use\n              <span style={{width: 24}} className={'yellow-arrow'}><svg.ChevronLeft /></span>\n              and{\" \"}\n              <span style={{width: 24}} className={'yellow-arrow'}><svg.ChevronRight /></span>\n              to shift and compare countries at different times.\n            </p>\n\n            {this.state.enteringRegion ? (\n              <AddRegion onSuccess={() => this.dismissNewRegionInput()} />\n            ) : (\n              this.renderAddRegion()\n            )}\n          </div>\n        )}\n      </Measure>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  regions: state.regions\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators({ addRegion, removeRegion, shiftRegion }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(XAxis);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"./redux/reducers\";\nimport ChartControl from \"./chart-control\";\nimport { TwitterButton } from \"./TwitterButton\";\nimport VX from \"./vx\";\nimport XAxis from \"./x-axis\";\n\nimport \"./App.css\";\n\nfunction App({ change }) {\n  return (\n    <div id=\"app-wrapper\">\n      <div id=\"title-row\" className=\"row\">\n        <div className=\"col-12 mx-auto\">\n          <h1 id=\"page-title\">COVID Rules Everything Around Me</h1>\n          <h5 id=\"page-subtitle\">\n            Understand COVID growth rates between different countries.\n          </h5>\n          <div className=\"divider\">\n            <div id=\"title-separator\" />\n            <TwitterButton />\n          </div>\n          <div id=\"share-prompt\" className={change ? \"shown\" : \"\"}>\n            Share this page and others can see exactly the chart you have made!\n          </div>\n        </div>\n      </div>\n      <ChartControl />\n      <div className=\"chart\">\n        <div className=\"vx-wrapper\">\n          <VX />\n        </div>\n\n        <XAxis />\n      </div>\n      <footer>\n        <p>\n          Made by <a href={\"https://twitter.com/danqing_liu\"}>@danqing_liu</a>\n          &nbsp;and{\" \"}\n          <a href={\"https://twitter.com/victorpontis\"}>@victorpontis</a>\n          &nbsp;with data pulled from&nbsp;\n          <a href={\"https://ourworldindata.org/coronavirus\"}>\n            Our World In Data\n          </a>{' '}\n          and the European CDC.\n        </p>\n\n        <p>\n          Explore the code on&nbsp;\n          <a href={\"https://github.com/danqing/covid19/\"}>GitHub</a>. Credit to\n          Algolia for search.\n        </p>\n\n        <p>Updated daily at 12PM UTC.</p>\n      </footer>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  change: state.change\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducers from \"./redux/reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}